name: Run tests
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  run-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: '11'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run checks and unit tests
        run: ./gradlew check --no-daemon --console=plain -i
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-report-unit
          path: build/reports/

  run-android-tests:
    runs-on: macOS-11
    env:
      APPIUM_TEST_SERVER_PORT: 4723
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      APPIUM_STARTUP_TIMEOUT_SEC: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: '11'
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Appium
        run: |
          npm install -g appium@next
          npm install -g appium-doctor
      - name: Start Appium server
        run: |
          cwd=$(pwd)
          pushd "$cwd"
          cd ~
          appium driver install uiautomator2
          appium-doctor
          nohup appium \
            --base-path /wd/hub \
            --relaxed-security \
            2>&1 > "$cwd/appium.log" &
          popd
      - name: Wait for Appium server startup
        run: |
          seconds_started=$(date +%s)
          while ! nc -z $APPIUM_TEST_SERVER_HOST $APPIUM_TEST_SERVER_PORT; do
            sleep 0.1
            seconds_elapsed=$(( $(date +%s) - seconds_started ))
            if [[ $seconds_elapsed -gt $APPIUM_STARTUP_TIMEOUT_SEC ]]; then
              echo "Appium server was unable to start within $APPIUM_STARTUP_TIMEOUT_SEC seconds timeout"
              exit 1
            fi
          done
      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          profile: pixel_3_xl
          disable-animations: true
          emulator-options: -no-snapshot -no-window -no-boot-anim -camera-back emulated -camera-front emulated -gpu swiftshader_indirect
          script: ./gradlew clean android --info
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-report-android
          path: |
            build/reports/
            appium.log

  run-ios-tests:
    runs-on: macOS-11
    env:
      APPIUM_TEST_SERVER_PORT: 4723
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      APPIUM_STARTUP_TIMEOUT_SEC: 30
    steps:
      - uses: actions/checkout@v3
      - name: Setup iOS simulator
        uses: futureware-tech/simulator-action@v2
        with:
          model: 'iPhone 12'
          os: 'iOS'
          os_version: '15.2'
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Appium
        run: |
          npm install -g appium@next
          npm install -g appium-doctor
      - name: Log Xcode Version
        run: xcodebuild -version
      - name: Log Installed Simulators
        run: xcrun simctl list
      - name: Log Runtimes
        run: xcrun simctl list runtimes
      - name: Start Appium server
        run: |
          cwd=$(pwd)
          pushd "$cwd"
          cd ~
          appium driver install xcuitest
          appium driver install safari
          appium-doctor
          nohup appium \
            --base-path /wd/hub \
            --relaxed-security \
            2>&1 > "$cwd/appium.log" &
          popd
      - name: Wait for Appium server startup
        run: |
          seconds_started=$(date +%s)
          while ! nc -z $APPIUM_TEST_SERVER_HOST $APPIUM_TEST_SERVER_PORT; do
            sleep 0.1
            seconds_elapsed=$(( $(date +%s) - seconds_started ))
            if [[ $seconds_elapsed -gt $APPIUM_STARTUP_TIMEOUT_SEC ]]; then
              echo "Appium server was unable to start within $APPIUM_STARTUP_TIMEOUT_SEC seconds timeout"
              exit 1
            fi
          done
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: '11'
      - name: Run iOS tests
        run: ./gradlew ios --no-daemon --console=plain -i
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-report-ios
          path: |
            build/reports/
            appium.log

  auto-merge-dependabot:
    name: ðŸ¤– Auto merge dependabot PR
    timeout-minutes: 10
    needs: [run-unit-tests, run-ios-tests, run-android-tests]
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: ðŸ¤– Merge PR from dependabot
        uses: fastify/github-action-merge-dependabot@v3.6.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          target: minor
          merge-method: rebase
